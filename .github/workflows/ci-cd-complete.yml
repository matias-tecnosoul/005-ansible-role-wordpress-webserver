---
name: CI/CD - Test and Publish

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install stable compatible versions
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run yamllint
        run: yamllint .

      - name: Run ansible-lint
        run: ansible-lint .

  test:
    name: Molecule Testing
    runs-on: ubuntu-22.04
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        scenario: [ubuntu, debian, rocky]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Install Galaxy dependencies for testing
        run: |
          # Install testing-specific dependencies from each scenario
          ansible-galaxy install -r molecule/${{ matrix.scenario }}/requirements.yml --force

      - name: Run Molecule tests
        run: molecule test -s ${{ matrix.scenario }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  # ‚úÖ SAFE: Only publish on releases or manual trigger
  publish-galaxy:
    name: Publish to Ansible Galaxy
    runs-on: ubuntu-22.04
    needs: test
    # Solo ejecutar en releases o manualmente (workflow_dispatch)
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Debug Galaxy info
        run: |
          echo "üîç Galaxy publish info:"
          echo "Repository owner: ${{ github.repository_owner }}"
          echo "Repository name: ${{ github.event.repository.name }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"

      - name: Publish to Galaxy
        run: |
          # Import the role to Galaxy using GitHub integration
          ansible-galaxy role import \
            --api-key ${{ secrets.GALAXY_API_KEY }} \
            ${{ github.repository_owner }} \
            ${{ github.event.repository.name }}
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

      - name: Success Notification
        if: success()
        run: |
          echo "üéâ Role published successfully to Ansible Galaxy!"
          echo ""
          echo "üì¶ Galaxy Information:"
          echo "   Namespace: ${{ github.repository_owner }}"
          echo "   Role Name: wordpress_webserver"
          echo "   üîó URL: https://galaxy.ansible.com/ui/standalone/roles/${{ github.repository_owner }}/wordpress_webserver/"
          echo ""
          echo "üì• Installation:"
          echo "   ansible-galaxy role install ${{ github.repository_owner }}.wordpress_webserver"
          echo ""
          echo "üöÄ Database-agnostic usage example:"
          echo "   ---"
          echo "   - hosts: webservers"
          echo "     roles:"
          echo "       - geerlingguy.mysql  # User choice: any database"
          echo "       - ${{ github.repository_owner }}.wordpress_webserver"
          echo ""
          echo "‚úÖ Features:"
          echo "   - Multi-distribution: Ubuntu, Debian, Rocky Linux"
          echo "   - Auto PHP detection: 8.1, 8.2, 8.0"
          echo "   - Database-agnostic: Works with any DB solution"
          echo "   - Production-ready: Security, performance, idempotency"

      - name: Failure Notification
        if: failure()
        run: |
          echo "‚ùå Failed to publish to Galaxy"
          echo ""
          echo "üîç Troubleshooting checklist:"
          echo "   1. GALAXY_API_KEY secret configured?"
          echo "   2. Galaxy namespace permissions correct?"
          echo "   3. meta/main.yml format valid?"
          echo "   4. Role name matches Galaxy expectations?"
          echo "   5. Repository visibility is public?"
          echo ""
          echo "üõ†Ô∏è  Debug info:"
          echo "   Repository: ${{ github.repository }}"
          echo "   Event: ${{ github.event_name }}"
          echo "   Ref: ${{ github.ref }}"