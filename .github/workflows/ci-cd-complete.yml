name: CI/CD - Test and Publish

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run yamllint
        run: yamllint .

      - name: Run ansible-lint
        run: ansible-lint .

  test:
    name: Molecule Testing
    runs-on: ubuntu-22.04
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        scenario: [ubuntu, debian, rocky]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      # âœ… FIX: Install testing dependencies BEFORE running molecule
      - name: Install testing dependencies
        run: |
          echo "Installing testing dependencies for scenario: ${{ matrix.scenario }}"
          
          # Install from scenario-specific requirements.yml
          if [ -f "molecule/${{ matrix.scenario }}/requirements.yml" ]; then
            echo "Found requirements.yml for ${{ matrix.scenario }}"
            ansible-galaxy install -r molecule/${{ matrix.scenario }}/requirements.yml --force
          else
            echo "No requirements.yml found for ${{ matrix.scenario }}, using default"
            # Fallback: install geerlingguy.mysql directly
            ansible-galaxy install geerlingguy.mysql --force
          fi
          
          # Verify installation
          ansible-galaxy role list | grep mysql || echo "MySQL role not found"

      - name: Run Molecule tests
        run: molecule test -s ${{ matrix.scenario }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  publish-galaxy:
    name: Publish to Ansible Galaxy
    runs-on: ubuntu-22.04
    needs: test
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Publish to Galaxy
        run: |
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} ${{ github.repository_owner }} ${{ github.event.repository.name }}
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

      - name: Success notification
        if: success()
        run: |
          echo "Role published successfully to Ansible Galaxy!"
          echo "URL: https://galaxy.ansible.com/ui/standalone/roles/${{ github.repository_owner }}/wordpress_webserver/"

      - name: Failure notification
        if: failure()
        run: |
          echo "Failed to publish to Galaxy. Check GALAXY_API_KEY secret and permissions."
