---
- name: Verify Debian - Webserver Only
  hosts: all
  become: true
  gather_facts: true
  
  tasks:
    - name: Debug Debian information
      debug:
        msg:
          - "🐧 Testing Debian 12 - Webserver Components Only"
          - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Expected PHP: 8.2"
          - "Expected Apache: apache2"
          - "Note: Database testing is external responsibility"

    # ✅ WEBSERVER TESTS - These are our responsibility
    - name: Check if Apache is running
      systemd:
        name: apache2
        state: started
        enabled: yes
      check_mode: true
      register: apache_status
      failed_when: apache_status is changed

    - name: Check PHP version
      command: php --version
      register: php_version_output
      changed_when: false
      failed_when: php_version_output.rc != 0

    - name: Verify PHP 8.2 is installed
      assert:
        that:
          - "'PHP 8.2' in php_version_output.stdout"
        fail_msg: "Expected PHP 8.2, got: {{ php_version_output.stdout }}"
        success_msg: "✅ PHP 8.2 correctly detected: {{ php_version_output.stdout.split()[1] }}"

    - name: Verify PHP extensions are installed
      command: php -m
      register: php_modules
      changed_when: false

    - name: Check critical PHP modules
      assert:
        that:
          - "'mysql' in php_modules.stdout or 'mysqli' in php_modules.stdout"
          - "'curl' in php_modules.stdout"
          - "'gd' in php_modules.stdout"
          - "'mbstring' in php_modules.stdout"
        fail_msg: "Missing critical PHP modules: {{ php_modules.stdout }}"
        success_msg: "✅ All critical PHP modules installed"

    - name: Check WordPress directory exists
      stat:
        path: /var/www/html/wordpress
      register: wp_dir
      failed_when: not wp_dir.stat.exists

    - name: Check wp-config.php exists
      stat:
        path: /var/www/html/wordpress/wp-config.php
      register: wp_config
      failed_when: not wp_config.stat.exists

    - name: Verify wp-config.php has correct permissions
      assert:
        that:
          - wp_config.stat.mode == "0644"
          - wp_config.stat.pw_name == "www-data"
        fail_msg: "wp-config.php permissions incorrect: {{ wp_config.stat.mode }} ({{ wp_config.stat.pw_name }})"
        success_msg: "✅ wp-config.php permissions correct"

    - name: Test PHP syntax in wp-config.php
      shell: php -l /var/www/html/wordpress/wp-config.php
      register: php_syntax
      changed_when: false
      failed_when: php_syntax.rc != 0

    - name: Verify Apache virtual host configuration
      stat:
        path: /etc/apache2/sites-enabled/wordpress.conf
      register: vhost_enabled
      failed_when: not vhost_enabled.stat.exists

    - name: Verify default site is disabled
      stat:
        path: /etc/apache2/sites-enabled/000-default.conf
      register: default_site
      failed_when: default_site.stat.exists

    - name: Test Apache configuration syntax
      command: apache2ctl configtest
      register: apache_configtest
      changed_when: false
      failed_when: apache_configtest.rc != 0

    # ✅ LIMITED HTTP TEST - Only check if Apache serves something
    - name: Test basic HTTP response (Apache serving files)
      uri:
        url: "http://localhost"
        method: GET
        status_code: [200, 301, 302, 403, 404, 500, 503]  # Accept any response
        follow_redirects: none
        return_content: yes
      register: http_response
      failed_when: false

    - name: Verify Apache is responding (any HTTP status is OK)
      assert:
        that:
          - http_response.status is defined
          - http_response.status >= 200
          - http_response.status < 600
        fail_msg: "Apache not responding to HTTP requests"
        success_msg: "✅ Apache HTTP server responding ({{ http_response.status }})"

    # ✅ FIXED: WordPress core files check
    - name: Check WordPress core files exist
      stat:
        path: "{{ item }}"
      register: wp_core_files
      loop:
        - /var/www/html/wordpress/index.php
        - /var/www/html/wordpress/wp-admin
        - /var/www/html/wordpress/wp-content
        - /var/www/html/wordpress/wp-includes

    - name: Verify all WordPress core files exist
      assert:
        that:
          - item.stat.exists
        fail_msg: "WordPress core file missing: {{ item.item }}"
        success_msg: "✅ WordPress core file present: {{ item.item }}"
      loop: "{{ wp_core_files.results }}"
      loop_control:
        label: "{{ item.item }}"

    # ✅ NEW: More realistic permissions check
    - name: Check WordPress directory ownership
      stat:
        path: /var/www/html/wordpress
      register: wp_ownership

    - name: Verify WordPress directory is owned by www-data
      assert:
        that:
          - wp_ownership.stat.pw_name == "www-data"
          - wp_ownership.stat.gr_name == "www-data"
        fail_msg: "WordPress directory wrong ownership: {{ wp_ownership.stat.pw_name }}:{{ wp_ownership.stat.gr_name }}"
        success_msg: "✅ WordPress directory ownership correct (www-data:www-data)"

    # ✅ FIXED: Critical files check without wrong syntax
    - name: Check index.php is accessible
      stat:
        path: /var/www/html/wordpress/index.php
      register: index_php_stat

    - name: Check wp-config.php is accessible  
      stat:
        path: /var/www/html/wordpress/wp-config.php
      register: config_php_stat

    - name: Verify critical files are accessible
      assert:
        that:
          - index_php_stat.stat.readable
          - index_php_stat.stat.pw_name == "www-data"
          - config_php_stat.stat.readable
          - config_php_stat.stat.pw_name == "www-data"
        fail_msg: "Critical WordPress files not accessible by Apache"
        success_msg: "✅ Critical WordPress files accessible by Apache"

    # ✅ SIMPLIFIED: Just check no files are completely inaccessible
    - name: Check for completely inaccessible files (no read permissions)
      shell: find /var/www/html/wordpress -type f -not -readable | wc -l
      register: unreadable_files
      changed_when: false

    - name: Assert no files are completely inaccessible
      assert:
        that:
          - unreadable_files.stdout | int == 0
        fail_msg: "Found {{ unreadable_files.stdout }} unreadable files"
        success_msg: "✅ All WordPress files are readable by Apache"

    # ✅ SUMMARY - What we actually tested
    - name: Debian webserver verification summary
      debug:
        msg:
          - "🎉 debian 12 webserver verification completed!"
          - ""
          - "✅ WEBSERVER COMPONENTS (our responsibility):"
          - "  - Apache running and configured"
          - "  - PHP {{ php_version_output.stdout.split()[1] }} with extensions"
          - "  - WordPress files present and accessible"
          - "  - Virtual host configured correctly"
          - "  - File ownership set properly (www-data:www-data)"
          - "  - Apache serving HTTP requests ({{ http_response.status }})"
          - ""
          - "🔗 INTEGRATION TESTS (external responsibility):"
          - "  - Database connection (requires separate DB role)"
          - "  - WordPress installation wizard (requires manual setup)"
          - "  - Full end-to-end functionality (requires complete stack)"
          - ""
          - "🌐 Access: http://localhost:8181"
          - "🔍 Debug: molecule login -s debian"
          - ""
          - "💡 Note: HTTP {{ http_response.status }} is expected without database"
