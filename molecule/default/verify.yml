---
# Verificaciones específicas por distribución - WEBSERVER ONLY
- name: Verify Ubuntu hosts
  hosts: ubuntu_hosts
  become: true
  gather_facts: true
  tasks:
    - name: Debug Ubuntu detection
      debug:
        msg:
          - "🐧 Testing Ubuntu 22.04 - Webserver Components Only"
          - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Expected PHP: 8.1"
          - "Expected Apache: apache2"

    - name: Verify PHP 8.1 is installed on Ubuntu
      command: php --version
      register: php_version_ubuntu
      changed_when: false
      failed_when: "'PHP 8.1' not in php_version_ubuntu.stdout"

    - name: Show PHP version on Ubuntu
      debug:
        msg: "✅ Ubuntu PHP Version: {{ php_version_ubuntu.stdout.split()[1] }}"

    - name: Test WordPress access Ubuntu (webserver only)
      uri:
        url: "http://localhost"
        method: GET
        status_code: [200, 301, 302, 403, 404, 500, 503]  # Accept any response
      register: http_ubuntu
      failed_when: false

    - name: Show Ubuntu HTTP status
      debug:
        msg: "✅ Ubuntu HTTP Status: {{ http_ubuntu.status }} (expected without DB)"

- name: Verify Debian hosts
  hosts: debian_hosts
  become: true
  gather_facts: true
  tasks:
    - name: Debug Debian detection
      debug:
        msg:
          - "🐧 Testing Debian 12 - Webserver Components Only"
          - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Expected PHP: 8.2"
          - "Expected Apache: apache2"

    - name: Verify PHP 8.2 is installed on Debian
      command: php --version
      register: php_version_debian
      changed_when: false
      failed_when: "'PHP 8.2' not in php_version_debian.stdout"

    - name: Show PHP version on Debian
      debug:
        msg: "✅ Debian PHP Version: {{ php_version_debian.stdout.split()[1] }}"

    - name: Test WordPress access Debian (webserver only)
      uri:
        url: "http://localhost"
        method: GET
        status_code: [200, 301, 302, 403, 404, 500, 503]  # Accept any response
      register: http_debian
      failed_when: false

    - name: Show Debian HTTP status
      debug:
        msg: "✅ Debian HTTP Status: {{ http_debian.status }} (expected without DB)"

- name: Verify Rocky hosts
  hosts: rocky_hosts
  become: true
  gather_facts: true
  tasks:
    - name: Debug Rocky detection
      debug:
        msg:
          - "🐧 Testing Rocky Linux 9 - Webserver Components Only"
          - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "Expected PHP: 8.0"
          - "Expected Apache: httpd"

    - name: Verify PHP 8.0 is installed on Rocky
      command: php --version
      register: php_version_rocky
      changed_when: false
      failed_when: "'PHP 8.0' not in php_version_rocky.stdout"

    - name: Show PHP version on Rocky
      debug:
        msg: "✅ Rocky PHP Version: {{ php_version_rocky.stdout.split()[1] }}"

    - name: Test WordPress access Rocky (webserver only)
      uri:
        url: "http://localhost"
        method: GET
        status_code: [200, 301, 302, 403, 404, 500, 503]  # Accept any response
      register: http_rocky
      failed_when: false

    - name: Show Rocky HTTP status
      debug:
        msg: "✅ Rocky HTTP Status: {{ http_rocky.status }} (expected without DB)"

# Verificaciones comunes para todos los hosts - WEBSERVER ONLY
- name: Verify all WordPress servers
  hosts: wordpress_servers
  become: true
  gather_facts: true
  tasks:
    - name: Check correct Apache service is running
      systemd:
        name: "{{ expected_apache_service }}"
        state: started
        enabled: yes
      check_mode: true
      register: apache_status
      failed_when: apache_status is changed

    # ✅ REMOVED: MySQL service check - not our responsibility
    # - name: Check MySQL service is running
    
    - name: Check WordPress directory exists
      stat:
        path: /var/www/html/wordpress
      register: wp_dir
      failed_when: not wp_dir.stat.exists

    - name: Check wp-config.php exists
      stat:
        path: /var/www/html/wordpress/wp-config.php
      register: wp_config_stat
      failed_when: not wp_config_stat.stat.exists

    # ✅ SIMPLIFIED: Just check wp-config.php has database settings (not connection)
    - name: Verify wp-config.php has database configuration
      shell: grep -E "(DB_NAME|DB_USER|DB_PASSWORD|DB_HOST)" /var/www/html/wordpress/wp-config.php | wc -l
      register: db_config_lines
      changed_when: false

    - name: Assert wp-config.php has database settings
      assert:
        that:
          - db_config_lines.stdout | int >= 4
        fail_msg: "wp-config.php missing database configuration"
        success_msg: "✅ wp-config.php has database configuration (for external DB)"

    # ✅ REMOVED: Database connection test - not our responsibility
    # - name: Test database connection

    - name: Verify PHP extensions are installed
      command: php -m
      register: php_modules
      changed_when: false

    - name: Check critical PHP modules
      assert:
        that:
          - "'mysql' in php_modules.stdout or 'mysqli' in php_modules.stdout"
          - "'curl' in php_modules.stdout"
          - "'gd' in php_modules.stdout"
        fail_msg: "Missing critical PHP modules"
        success_msg: "✅ Critical PHP modules installed"

    - name: Final verification summary
      debug:
        msg:
          - "🎉 {{ inventory_hostname }} webserver verification completed!"
          - "✅ Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
          - "✅ PHP Version: {{ expected_php_version }}"
          - "✅ Apache Service: {{ expected_apache_service }} (running)"
          - "✅ WordPress Domain: {{ wordpress_domain }}"
          - "✅ WordPress Files: Present and configured"
          - ""
          - "🔗 EXTERNAL DEPENDENCIES (not tested):"
          - "  - Database connection (requires separate DB setup)"
          - "  - WordPress installation wizard"

# Verificación final de resumen - UPDATED
- name: Multi-distro webserver verification summary
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Summary of multi-distro webserver testing
      debug:
        msg:
          - "🎉 MULTI-DISTRO WEBSERVER TESTING COMPLETED!"
          - ""
          - "✅ WEBSERVER COMPONENTS VERIFIED:"
          - "  - Ubuntu 22.04 → PHP 8.1 + Apache → http://localhost:8180"
          - "  - Debian 12 → PHP 8.2 + Apache → http://localhost:8181"  
          - "  - Rocky 9 → PHP 8.0 + httpd → http://localhost:8182"
          - ""
          - "🌐 Test webserver responses (HTTP 500 expected without DB):"
          - "   - Ubuntu: curl http://localhost:8180"
          - "   - Debian: curl http://localhost:8181"
          - "   - Rocky:  curl http://localhost:8182"
          - ""
          - "🔍 Debug containers:"
          - "   - molecule login --host ubuntu2204-instance"
          - "   - molecule login --host debian12-instance" 
          - "   - molecule login --host rocky9-instance"
          - ""
          - "💡 Role Focus: Webserver setup only (database-agnostic)"
          - "📚 For full WordPress: Combine with database role"
